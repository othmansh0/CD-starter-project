default_platform(:ios)

platform :ios do
  desc "Run tests"
  lane :test do
    run_tests(
      project: "CD starter project.xcodeproj",
      scheme: "CD starter project",
      device: "iPhone 16",
      only_testing: ["CD starter projectTests"]
    )
  end

  desc "Build and upload to TestFlight"
  lane :ci_build do
    puts "🔍 Starting ci_build lane for TestFlight upload"

    # Debug environment variables (mapped from GitHub secrets)
    key_id = ENV["APP_STORE_CONNECT_API_KEY_ID"]
    issuer_id = ENV["APP_STORE_CONNECT_API_ISSUER_ID"] 
    key_content = ENV["APP_STORE_CONNECT_API_KEY_CONTENT"]
    
    puts "🔍 Debug: key_id present: #{!key_id.nil? && !key_id.empty?}"
    puts "🔍 Debug: issuer_id present: #{!issuer_id.nil? && !issuer_id.empty?}"
    puts "🔍 Debug: key_content present: #{!key_content.nil? && !key_content.empty?}"
    
    # Ensure we have all required API keys
    unless key_id && issuer_id && key_content && 
           !key_id.empty? && !issuer_id.empty? && !key_content.empty?
      UI.user_error!("❌ Missing App Store Connect API credentials. Please configure API_KEY_ID, API_ISSUER_ID, and API_KEY_BASE64 secrets.")
    end
    
    puts "🔑 Setting up App Store Connect API key..."
    # Setup App Store Connect API key
    app_store_connect_api_key(
      key_id: key_id,
      issuer_id: issuer_id,
      key_content: key_content,
      is_key_content_base64: true,
      duration: 1200,
      in_house: false
    )
    puts "✅ API key setup successful"
    
    puts "📝 Creating AuthKey.p8 file for xcodebuild..."
    # Create AuthKey.p8 file from base64 content for xcodebuild
    require 'base64'
    decoded_key = Base64.decode64(key_content)
    key_filename = "AuthKey_#{key_id}.p8"
    key_absolute_path = File.expand_path(key_filename)
    File.write(key_absolute_path, decoded_key)
    puts "✅ AuthKey.p8 file created at: #{key_absolute_path}"
    
    puts "🏗️  Building for App Store distribution with automatic signing..."
    # Build the app for App Store distribution with automatic signing
    build_app(
      project: "CD starter project.xcodeproj",
      scheme: "CD starter project",
      export_method: "app-store",
      output_directory: "./build",
      output_name: "CD_starter_project",
      clean: true,
      xcargs: "-allowProvisioningUpdates -authenticationKeyPath #{key_absolute_path} -authenticationKeyID #{key_id} -authenticationKeyIssuerID #{issuer_id}",
      export_options: {
        method: "app-store",
        uploadBitcode: false,
        uploadSymbols: true,
        compileBitcode: false
      }
    )
    puts "✅ Build completed successfully"
    
    puts "🚀 Uploading to TestFlight..."
    # Upload to TestFlight
    upload_to_testflight(
      skip_waiting_for_build_processing: true,
      skip_submission: true,
      changelog: "Automated build from GitHub Actions"
    )
    
    puts "✅ Successfully uploaded to TestFlight!"
    
    # Clean up the key file
    File.delete(key_absolute_path) if File.exist?(key_absolute_path)
    puts "🧹 Cleaned up AuthKey.p8 file"
  end
end 