default_platform(:ios)

platform :ios do
  desc "Run tests"
  lane :test do
    run_tests(
      project: "CD starter project.xcodeproj",
      scheme: "CD starter project",
      device: "iPhone 16",
      only_testing: ["CD starter projectTests"]
    )
  end

  desc "Build and upload to TestFlight"
  lane :ci_build do
    puts "🔍 Starting ci_build lane for TestFlight upload"

    # Debug environment variables (mapped from GitHub secrets)
    key_id = ENV["APP_STORE_CONNECT_API_KEY_ID"]
    issuer_id = ENV["APP_STORE_CONNECT_API_ISSUER_ID"] 
    key_content = ENV["APP_STORE_CONNECT_API_KEY_CONTENT"]
    
    puts "🔍 Debug: key_id present: #{!key_id.nil? && !key_id.empty?}"
    puts "🔍 Debug: issuer_id present: #{!issuer_id.nil? && !issuer_id.empty?}"
    puts "🔍 Debug: key_content present: #{!key_content.nil? && !key_content.empty?}"
    
    # Check if API keys are available for TestFlight upload
    if key_id && issuer_id && key_content && 
       !key_id.empty? && !issuer_id.empty? && !key_content.empty?
      
      puts "🔑 Setting up App Store Connect API key for TestFlight..."
      begin
        # Setup App Store Connect API key with explicit parameters
        app_store_connect_api_key(
          key_id: key_id,
          issuer_id: issuer_id,
          key_content: key_content,
          is_key_content_base64: true,
          duration: 1200,
          in_house: false
        )
        puts "✅ API key setup successful"
        
        puts "🏗️  Building for App Store distribution..."
        # Build the app for App Store distribution with automatic signing
        build_app(
          project: "CD starter project.xcodeproj",
          scheme: "CD starter project",
          export_method: "app-store",
          output_directory: "./build",
          output_name: "CD_starter_project",
          clean: true,
          xcargs: "-allowProvisioningUpdates",
          export_options: {
            method: "app-store"
          }
        )
        
        puts "🚀 Uploading to TestFlight..."
        # Upload to TestFlight
        upload_to_testflight(
          skip_waiting_for_build_processing: true,
          skip_submission: true,
          changelog: "Automated build from GitHub Actions"
        )
        
        puts "✅ Successfully uploaded to TestFlight!"
        
      rescue => e
        puts "❌ TestFlight process failed: #{e.message}"
        puts "⚠️  Falling back to archive-only build..."
        
        # Fallback to archive-only build
        build_app(
          project: "CD starter project.xcodeproj", 
          scheme: "CD starter project",
          skip_codesigning: true,
          skip_package_ipa: true,
          archive_path: "./build/CD_starter_project.xcarchive",
          clean: true
        )
        
        puts "✅ Archive build completed as fallback!"
      end
      
    else
      puts "⚠️  API keys not configured - building archive only"
      puts "🔍 This version creates an archive without TestFlight upload"
      
      puts "🏗️  Starting build process without signing..."
      # Build archive only (no signing/export)
      build_app(
        project: "CD starter project.xcodeproj", 
        scheme: "CD starter project",
        skip_codesigning: true,
        skip_package_ipa: true,
        archive_path: "./build/CD_starter_project.xcarchive",
        clean: true
      )
      
      puts "✅ Archive build completed successfully (no signing required)!"
    end
  end
end 