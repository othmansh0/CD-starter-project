default_platform(:ios)

platform :ios do
  desc "Run tests"
  lane :test do
    run_tests(
      project: "CD starter project.xcodeproj",
      scheme: "CD starter project",
      device: "iPhone 16",
      only_testing: ["CD starter projectTests"]
    )
  end

  desc "Build and upload to TestFlight"
  lane :ci_build do
    key_id = ENV["API_KEY_ID"]
    issuer_id = ENV["API_ISSUER_ID"]
    key_content = ENV["API_KEY_BASE64"]
    
    puts "üîç Starting ci_build lane for TestFlight upload"
    
    # Ensure we have all required API keys
    unless key_id && issuer_id && key_content &&
           !key_id.empty? && !issuer_id.empty? && !key_content.empty?
      UI.user_error!("‚ùå Missing App Store Connect API credentials. Please configure API_KEY_ID, API_ISSUER_ID, and API_KEY_BASE64 secrets.")
    end
    
    puts "üîë Setting up App Store Connect API key..."
    app_store_connect_api_key(
      key_id: key_id,
      issuer_id: issuer_id,
      key_content: key_content,
      is_key_content_base64: true,
      duration: 1200,
      in_house: false
    )
    puts "‚úÖ API key setup successful"
    
    puts "üèóÔ∏è  Building for App Store distribution with automatic signing..."
    
    # Create AuthKey.p8 file from base64 content for xcodebuild
    auth_key_content = Base64.decode64(ENV['API_KEY_BASE64'])
    File.write("/tmp/AuthKey_#{ENV['API_KEY_ID']}.p8", auth_key_content)
    
    # Use gym with automatic signing and direct API key authentication
    gym(
      project: "CD starter project.xcodeproj",
      scheme: "CD starter project",
      export_method: "app-store",
      output_directory: "./build",
      output_name: "CD_starter_project",
      clean: true,
      xcargs: "-allowProvisioningUpdates -authenticationKeyPath /tmp/AuthKey_#{ENV['API_KEY_ID']}.p8 -authenticationKeyID #{ENV['API_KEY_ID']} -authenticationKeyIssuerID #{ENV['API_ISSUER_ID']}",
      export_options: {
        method: "app-store",
        uploadBitcode: false,
        uploadSymbols: true,
        compileBitcode: false,
        manageAppVersionAndBuildNumber: false
      }
    )
    puts "‚úÖ Build completed successfully"
    
    puts "üöÄ Uploading to TestFlight..."
    upload_to_testflight(
      skip_waiting_for_build_processing: true,
      skip_submission: true,
      changelog: "Automated build from GitHub Actions"
    )
    puts "‚úÖ Successfully uploaded to TestFlight!"
  end
end 