name: iOS Build and Deploy

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      version_number:
        description: 'Version number (e.g., 1.0.0)'
        required: false
        type: string
      build_number:
        description: 'Build number (e.g., 123)'
        required: false
        type: string

jobs:
  test:
    name: Run Tests
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode Version
        run: sudo xcode-select -s /Applications/Xcode_16.1.app/Contents/Developer

      - name: Cache Ruby dependencies
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install Ruby dependencies
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Run tests
        run: bundle exec fastlane test

  build_and_deploy:
    name: Build and Deploy to TestFlight
    runs-on: macos-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for version bumping

      - name: Select Xcode Version
        run: sudo xcode-select -s /Applications/Xcode_16.1.app/Contents/Developer

      - name: Cache Ruby dependencies
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install Ruby dependencies
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Build and Upload to TestFlight
        env:
          # App Store Connect API Key
          API_KEY_ID: ${{ secrets.API_KEY_ID }}
          API_ISSUER_ID: ${{ secrets.API_ISSUER_ID }}
          API_KEY_BASE64: ${{ secrets.API_KEY_BASE64 }}
          
          # Apple Developer Account
          FASTLANE_USERNAME: ${{ secrets.FASTLANE_USERNAME }}
          DEVELOPMENT_TEAM: ${{ secrets.DEVELOPMENT_TEAM }}
          
          # App Configuration
          APP_IDENTIFIER: ${{ secrets.APP_IDENTIFIER || 'com.othmanshahrouri.cd.starter.project' }}
          
          # Match Configuration (optional - for certificate management)
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          
          # Version Configuration (from workflow inputs)
          VERSION_NUMBER: ${{ github.event.inputs.version_number }}
          BUILD_NUMBER: ${{ github.event.inputs.build_number }}
          
          # Fastlane Configuration
          FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: "200"
          FASTLANE_XCODE_LIST_TIMEOUT: "200"
        run: |
          bundle exec fastlane build_and_upload

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: build-artifacts
          path: |
            build/
            fastlane/report.xml
          retention-days: 7 