# This script defines a GitHub Actions workflow that is triggered when a pull request is made to the `develop` branch, or when manually dispatched.        

name: CD starter project testing workflow
run-name: Run by @${{ github.actor }}
on:
  workflow_dispatch:
  pull_request:
    branches: [ "develop" ]
jobs:
  test:
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v4

      - name: Select Xcode Version
        run: |
          sudo xcode-select -s /Applications/Xcode_16.2.app/Contents/Developer
          echo "DEVELOPER_DIR=/Applications/Xcode_16.2.app/Contents/Developer" >> "$GITHUB_ENV"

      - name: Install dependencies
        run: bundle install

      - name: List available simulators
        run: xcrun simctl list devices

      - name: Resolve simulator device (no OS specified)
        shell: bash
        run: |
          set -euo pipefail
          echo "=== Ultra-Simple Simulator Resolution ==="
          echo "Finding any iPhone 16 Pro, ignoring OS version to avoid SDK conflicts"

          UDID=$(xcrun simctl list devices | grep "iPhone 16 Pro (" | head -1 | sed -E 's/.*\(([A-F0-9-]+)\).*/\1/') || true
          if [ -n "${UDID}" ]; then
            NAME="iPhone 16 Pro"
          else
            echo "No iPhone 16 Pro found, trying iPhone 16..."
            UDID=$(xcrun simctl list devices | grep "iPhone 16 (" | head -1 | sed -E 's/.*\(([A-F0-9-]+)\).*/\1/') || true
            NAME="iPhone 16"
          fi

          if [ -z "${UDID}" ]; then
            echo "::error::No compatible iPhone simulator found"
            echo "=== Available simulators ==="
            xcrun simctl list devices
            exit 1
          fi

          echo "âœ… Found: ${NAME} (${UDID})"
          echo "SIMULATOR_UDID=${UDID}" >> "$GITHUB_ENV"
          echo "TEST_DEVICE=${NAME}" >> "$GITHUB_ENV"

      - name: Boot simulator
        run: |
          set -euo pipefail
          echo "Booting simulator $SIMULATOR_UDID"
          xcrun simctl boot "$SIMULATOR_UDID" || true
          xcrun simctl bootstatus "$SIMULATOR_UDID" -b

      - name: Run Tests
        env:
          FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: "120"
          FASTLANE_XCODEBUILD_SETTINGS_RETRIES: "4"
          TEST_DEVICE: ${{ env.TEST_DEVICE }}
        run: bundle exec fastlane test